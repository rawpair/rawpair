# SPDX-License-Identifier: MPL-2.0
- name: RawPair Ubuntu Deployment
  hosts: rawpair
  become: yes
  vars:
    user: your-user
    rawpair_dir: "/home/{{ user }}/rawpair"

  tasks:
    - name: Ensure required packages are installed
      apt:
        name:
          - ufw
          - docker.io
          - docker-compose
        state: present
        update_cache: yes

    - name: Create systemd service for rawpair-infra (no-postgres)
      copy:
        dest: /etc/systemd/system/rawpair-infra.service
        content: |
          [Unit]
          Description=RawPair Supporting Infrastructure
          Requires=docker.service
          After=docker.service

          [Service]
          Type=oneshot
          RemainAfterExit=yes
          WorkingDirectory={{ rawpair_dir }}
          ExecStart=/usr/bin/docker compose -f docker-compose.no-postgres.yml up -d
          ExecStop=/usr/bin/docker compose -f docker-compose.no-postgres.yml down
          TimeoutStartSec=0

          [Install]
          WantedBy=multi-user.target

    - name: Reload and enable infra service
      systemd:
        daemon_reload: yes
        name: rawpair-infra
        enabled: yes
        state: started

    - name: Create systemd service for rawpair Phoenix app
      copy:
        dest: /etc/systemd/system/rawpair.service
        content: |
          [Unit]
          Description=RawPair Phoenix App
          After=network.target

          [Service]
          User={{ user }}
          WorkingDirectory={{ rawpair_dir }}/phoenix-app/_build/prod/rel/rawpair
          ExecStart=/bin/bash {{ rawpair_dir }}/phoenix-app/start.sh
          ExecStop=/bin/bash {{ rawpair_dir }}/phoenix-app/stop.sh
          Restart=always
          Environment=PHX_SERVER=true
          Environment=MIX_ENV=prod

          [Install]
          WantedBy=multi-user.target

    - name: Reload and enable Phoenix app service
      systemd:
        daemon_reload: yes
        name: rawpair
        enabled: yes
        state: started

    - name: Secure Postgres port with UFW
      ufw:
        rule: allow
        proto: tcp
        from_ip: 127.0.0.1
        port: 5432

    - name: Deny external Postgres access
      ufw:
        rule: deny
        proto: tcp
        port: 5432
